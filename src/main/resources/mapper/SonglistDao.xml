<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.music.demo.dao.SonglistDao">
  <resultMap id="BaseResultMap" type="com.music.demo.domain.Songlist">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="modifyTime" jdbcType="TIMESTAMP" property="modifytime" />
    <result column="isDeleted" jdbcType="INTEGER" property="isdeleted" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="typedId" jdbcType="INTEGER" property="typedid" />
    <result column="songId" jdbcType="INTEGER" property="songid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, createTime, modifyTime, isDeleted, `type`, typedId, songId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from songlist
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from songlist
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.music.demo.domain.Songlist" useGeneratedKeys="true">
    insert into songlist (createTime, modifyTime, isDeleted, 
      `type`, typedId, songId
      )
    values (#{createtime,jdbcType=TIMESTAMP}, #{modifytime,jdbcType=TIMESTAMP}, #{isdeleted,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{typedid,jdbcType=INTEGER}, #{songid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.music.demo.domain.Songlist" useGeneratedKeys="true">
    insert into songlist
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createtime != null">
        createTime,
      </if>
      <if test="modifytime != null">
        modifyTime,
      </if>
      <if test="isdeleted != null">
        isDeleted,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="typedid != null">
        typedId,
      </if>
      <if test="songid != null">
        songId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifytime != null">
        #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdeleted != null">
        #{isdeleted,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="typedid != null">
        #{typedid,jdbcType=INTEGER},
      </if>
      <if test="songid != null">
        #{songid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.music.demo.domain.Songlist">
    update songlist
    <set>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifytime != null">
        modifyTime = #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdeleted != null">
        isDeleted = #{isdeleted,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="typedid != null">
        typedId = #{typedid,jdbcType=INTEGER},
      </if>
      <if test="songid != null">
        songId = #{songid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.music.demo.domain.Songlist">
    update songlist
    set createTime = #{createtime,jdbcType=TIMESTAMP},
      modifyTime = #{modifytime,jdbcType=TIMESTAMP},
      isDeleted = #{isdeleted,jdbcType=INTEGER},
      `type` = #{type,jdbcType=INTEGER},
      typedId = #{typedid,jdbcType=INTEGER},
      songId = #{songid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>